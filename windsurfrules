# VanilAI Project Rules

## 1. Core Project Details
- **Project Name**: VanilAI
- **Language**: Lua
- **Domain**: Game AI for Ragnarok Online (Homunculus)
- **Primary Goal**: To enhance a fork of the AzzyAI for the Vanilmirth homunculus, focusing on efficiency, customizability, and clear documentation.

## 2. Development Principles
- **Clarity and Readability**: Code should be well-commented and easy to understand. Add descriptive headers to all files.
- **Modularity**: New features should be implemented in a modular way (e.g., the priority-based skill engine).
- **User-Facing Configuration**: All customizable settings should be exposed in `H_Config.lua` with clear comments.
- **Preserve Core Logic**: Avoid modifying the original AzzyAI core files (`AI_main.lua`, `AzzyUtil.lua`) unless necessary. Prefer to use the `H_Extra.lua` file for custom hooks.

## 3. Key Files & Their Purpose
- **`AI_main.lua`**: The core state machine and brain of the AI. Modify with care.
- **`H_Config.lua`**: The main configuration file for all user-facing settings.
- **`H_Tactics.lua`**: Defines combat behavior against specific monsters.
- **`H_Skills.lua`**: The database for the priority-based skill engine. Define new skills and their conditions here.
- **`AzzyUtil.lua`**: The main utility library. Our custom `ChooseSkill()` engine resides here.
- **`documentation/VanilAI_Documentation.md`**: The primary source of truth for project documentation.

## 4. Workflow & Process
- **Analyze First**: Before making changes, always read the relevant files to understand the existing context.
- **Document as You Go**: When adding or modifying code, ensure that the corresponding documentation (`VanilAI_Documentation.md` and file headers) is updated.
- **Test Incrementally**: We are working with a live game environment. Changes should be small and incremental to allow for easier testing and debugging.
- **Use the Devlog**: Keep the `devlog/` updated with changes, feedback, and future tasks.

## 5. Technical Notes
- The AI is event-driven, based on a state machine (`IDLE_ST`, `CHASE_ST`, etc.).
- The project includes files for a Mercenary AI (`M_*.lua`), but these are **out of scope** and should not be modified.
- The `data` folder contains saved states for characters and should not be deleted.
